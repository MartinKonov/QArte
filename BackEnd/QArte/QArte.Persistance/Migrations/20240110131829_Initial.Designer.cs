// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using QArte.Persistance;

#nullable disable

namespace QArte.Persistance.Migrations
{
    [DbContext(typeof(QArtèDBContext))]
    [Migration("20240110131829_Initial")]
    partial class Initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.26")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("QArte.Persistance.PersistanceModels.BankAccount", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"), 1L, 1);

                    b.Property<string>("BeneficiaryName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IBAN")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PaymentMethodID")
                        .HasColumnType("int");

                    b.Property<string>("StripeInfo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.HasIndex("PaymentMethodID");

                    b.ToTable("BankAccounts");
                });

            modelBuilder.Entity("QArte.Persistance.PersistanceModels.BanTable", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"), 1L, 1);

                    b.Property<int>("BanID")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.ToTable("BanTables");
                });

            modelBuilder.Entity("QArte.Persistance.PersistanceModels.Fee", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"), 1L, 1);

                    b.Property<decimal>("Amount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Currency")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("ExchangeRate")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("ID");

                    b.ToTable("Fees");
                });

            modelBuilder.Entity("QArte.Persistance.PersistanceModels.Gallery", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"), 1L, 1);

                    b.HasKey("ID");

                    b.ToTable("Galleries");
                });

            modelBuilder.Entity("QArte.Persistance.PersistanceModels.Invoice", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"), 1L, 1);

                    b.Property<int>("BankAccountID")
                        .HasColumnType("int");

                    b.Property<int>("FeeID")
                        .HasColumnType("int");

                    b.Property<DateTime>("InvoiceDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("SettlementCycleID")
                        .HasColumnType("int");

                    b.Property<decimal>("TotalAmount")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("ID");

                    b.HasIndex("BankAccountID");

                    b.HasIndex("FeeID");

                    b.HasIndex("SettlementCycleID");

                    b.ToTable("Invoices");
                });

            modelBuilder.Entity("QArte.Persistance.PersistanceModels.Page", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"), 1L, 1);

                    b.Property<int?>("ArtistID")
                        .HasColumnType("int");

                    b.Property<string>("Bio")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("GalleryID")
                        .HasColumnType("int");

                    b.Property<string>("QRLink")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.HasIndex("ArtistID");

                    b.HasIndex("GalleryID");

                    b.ToTable("Pages");
                });

            modelBuilder.Entity("QArte.Persistance.PersistanceModels.PaymentMethod", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"), 1L, 1);

                    b.Property<int>("PaymentMethods")
                        .HasColumnType("int");

                    b.Property<int>("UserID")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("UserID");

                    b.ToTable("PaymentMethods");
                });

            modelBuilder.Entity("QArte.Persistance.PersistanceModels.Picture", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"), 1L, 1);

                    b.Property<int>("GalleryID")
                        .HasColumnType("int");

                    b.Property<string>("PictureURL")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.HasIndex("GalleryID");

                    b.ToTable("Pictures");
                });

            modelBuilder.Entity("QArte.Persistance.PersistanceModels.Role", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"), 1L, 1);

                    b.Property<int>("ERole")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.ToTable("Role");
                });

            modelBuilder.Entity("QArte.Persistance.PersistanceModels.SettlementCycle", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"), 1L, 1);

                    b.Property<DateTime>("DatePeriod")
                        .HasColumnType("datetime2");

                    b.HasKey("ID");

                    b.ToTable("SettlementCycles");
                });

            modelBuilder.Entity("QArte.Persistance.PersistanceModels.User", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"), 1L, 1);

                    b.Property<string>("Discriminator")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PictureUrl")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("ID");

                    b.ToTable("Users");

                    b.HasDiscriminator<string>("Discriminator").HasValue("User");
                });

            modelBuilder.Entity("QArte.Persistance.PersistanceModels.Admin", b =>
                {
                    b.HasBaseType("QArte.Persistance.PersistanceModels.User");

                    b.Property<int>("RoleID")
                        .HasColumnType("int")
                        .HasColumnName("Admin_RoleID");

                    b.HasIndex("RoleID");

                    b.HasDiscriminator().HasValue("Admin");
                });

            modelBuilder.Entity("QArte.Persistance.PersistanceModels.Artist", b =>
                {
                    b.HasBaseType("QArte.Persistance.PersistanceModels.User");

                    b.Property<int>("BanID")
                        .HasColumnType("int");

                    b.Property<int>("BankAccountID")
                        .HasColumnType("int");

                    b.Property<int>("RoleID")
                        .HasColumnType("int");

                    b.HasIndex("BanID");

                    b.HasIndex("BankAccountID");

                    b.HasIndex("RoleID");

                    b.HasDiscriminator().HasValue("Artist");
                });

            modelBuilder.Entity("QArte.Persistance.PersistanceModels.BankAccount", b =>
                {
                    b.HasOne("QArte.Persistance.PersistanceModels.PaymentMethod", "PaymentMethod")
                        .WithMany()
                        .HasForeignKey("PaymentMethodID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("PaymentMethod");
                });

            modelBuilder.Entity("QArte.Persistance.PersistanceModels.Invoice", b =>
                {
                    b.HasOne("QArte.Persistance.PersistanceModels.BankAccount", "BankAccount")
                        .WithMany("Invoices")
                        .HasForeignKey("BankAccountID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("QArte.Persistance.PersistanceModels.Fee", "Fee")
                        .WithMany()
                        .HasForeignKey("FeeID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("QArte.Persistance.PersistanceModels.SettlementCycle", "SettlementCycle")
                        .WithMany()
                        .HasForeignKey("SettlementCycleID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("BankAccount");

                    b.Navigation("Fee");

                    b.Navigation("SettlementCycle");
                });

            modelBuilder.Entity("QArte.Persistance.PersistanceModels.Page", b =>
                {
                    b.HasOne("QArte.Persistance.PersistanceModels.Artist", null)
                        .WithMany("Pages")
                        .HasForeignKey("ArtistID");

                    b.HasOne("QArte.Persistance.PersistanceModels.Gallery", "Gallery")
                        .WithMany()
                        .HasForeignKey("GalleryID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Gallery");
                });

            modelBuilder.Entity("QArte.Persistance.PersistanceModels.PaymentMethod", b =>
                {
                    b.HasOne("QArte.Persistance.PersistanceModels.User", "User")
                        .WithMany()
                        .HasForeignKey("UserID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("QArte.Persistance.PersistanceModels.Picture", b =>
                {
                    b.HasOne("QArte.Persistance.PersistanceModels.Gallery", "Gallery")
                        .WithMany("Pictures")
                        .HasForeignKey("GalleryID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Gallery");
                });

            modelBuilder.Entity("QArte.Persistance.PersistanceModels.Admin", b =>
                {
                    b.HasOne("QArte.Persistance.PersistanceModels.Role", "Role")
                        .WithMany("Admins")
                        .HasForeignKey("RoleID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Role");
                });

            modelBuilder.Entity("QArte.Persistance.PersistanceModels.Artist", b =>
                {
                    b.HasOne("QArte.Persistance.PersistanceModels.BanTable", "Ban")
                        .WithMany()
                        .HasForeignKey("BanID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("QArte.Persistance.PersistanceModels.BankAccount", "BankAccount")
                        .WithMany()
                        .HasForeignKey("BankAccountID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("QArte.Persistance.PersistanceModels.Role", "Role")
                        .WithMany("Artists")
                        .HasForeignKey("RoleID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Ban");

                    b.Navigation("BankAccount");

                    b.Navigation("Role");
                });

            modelBuilder.Entity("QArte.Persistance.PersistanceModels.BankAccount", b =>
                {
                    b.Navigation("Invoices");
                });

            modelBuilder.Entity("QArte.Persistance.PersistanceModels.Gallery", b =>
                {
                    b.Navigation("Pictures");
                });

            modelBuilder.Entity("QArte.Persistance.PersistanceModels.Role", b =>
                {
                    b.Navigation("Admins");

                    b.Navigation("Artists");
                });

            modelBuilder.Entity("QArte.Persistance.PersistanceModels.Artist", b =>
                {
                    b.Navigation("Pages");
                });
#pragma warning restore 612, 618
        }
    }
}
